# from pudb import set_trace; set_trace()
from typing import List


class Bitset:

    def __init__(self, size: int):
        self.size = size
        self.bit = 0
        self.ones = 0
        

    def fix(self, idx: int) -> None:
        shift = self.size - 1 - idx
        if (self.bit >> shift) & 1 == 0:
            self.bit |= 1 << shift
            self.ones += 1
        
    def unfix(self, idx: int) -> None:
        shift = self.size - 1 - idx
        if (self.bit >> shift) & 1 == 1:
            self.bit &= (((1 << self.size) - 1) ^ 1 << shift)
            self.ones -= 1
        
    def flip(self) -> None:
        self.bit ^= ((1 << self.size) - 1)
        self.ones = self.size - self.ones

    def all(self) -> bool:
        return self.ones == self.size

    def one(self) -> bool:
        return self.bit != 0
        
    def count(self) -> int:
        return self.ones

    def toString(self) -> str:
        return f'{self.bit:0{self.size}b}'



# sol = Solution2()
# tests = [
#     ('leetcode', 7, 20, 2, 0, 'ee'),
#     ('fbxzaad', 31, 100, 3, 32, 'fbx'),
#     ("qewhvotxijxctihmemjtbxhitjrldvvqovzsrokchwounwacwsnxbkrlkefudxozdduwchfeugcjrlvhctudwdmnbokyfyficbgobrsitapxgizzcqgpyhlytptzfhokmhopbmpqdgwrwunwddssxcbazweyrebkglejntgnpeyfwibtdzsdhhwhperjaouqnfxvjufchbogtreiyyamocytgiszaunnjgoikxjxkwkwzhupqfktskkzvmmswipcsxpiuyhtodrpljbkwwvbehkdrvqurzsnlxfzclmwmpabkhlnwomoigplbiwzqpxeugbclwonxkhvlgtgpuuthkkpkbabmuttmudlypxcvgudcuunaqsgunilwrczpeatvdyxmlphzjltnxyfccjxmblvciytomslsrpidpygwbguxzzulqyhwuojeayaonqhaqjnbecpipzyobhevpuzadjzxfspqeuhfqzkqikbamkajzwwplopqfkrhilhvjffxowbfgtccpvuyrtbarehrwuvzoyxcuzpzhramjsedksnolzomnibrayztwmmoyvouavuqezzerxxswnhhrveughavtjevhgvvwtucubqlbdsnhemwpebroxidpgkbnxkewiovoqwicpgnaqdapbeguzgrolndykcoacbyrnyqgmzobnkllslzefwfhqqcfkfkoiftcfgumsvoavjbcglgeriwechchmoezsayqymazteqpwxikjszfwplnihvuvyyvjcahvpylfuiffutplkvwkyrgzraegboubdqtrtjijisgjhaqkgbbmvzzlkdruxogczwagmxftsesqtwxxplnaiowmpzxukkkgpvgejimfffhzulozmyukbcxklluvfgnhrbvuldiwavzqjgfhtfweyogsznrocusnuuttypwkuefjahearxgymkaeiljvnmxdrypckrzyavqxinwqcghrpixbzpmalihhcliqabjqwfwcgmewrhtafkqvvuwwvfuccyswclhxfbzgdtvnphwqnewehtuqsbaanzmjewyzwecjxnamadqsstqjjedzqiobhzjngszprkzrjyxqnwrgxroktpvumjuootvllnelbpacqjzqetehqtvvawaqslxwkbkigdlbvvqefnzsszdtdkdtgcuebyanikjlultyofyahhtcmvrdyvlevlkooefrgrgaehwnqnlyqpvovkmfkglefrmqeovqcphgzzdaflkoeecoiossmmcnltdlytqvbuurgtjolmwllvraztzgqjaqocudykyvzoyqqalccguysiuzggotypxajxcwwqekvudlasbwppzitnhuigebrpawyziieepsrclxuhzacsliwmijdzpdpmkfpvybeqkcquixtwcqiuspehcdoyuhfwcmcctdpebgibenfenxlwejxuoabypwwnvjpurzsgmloregohjmxlobbqkxntwidoeabvkjjotbjxixosmcdpcrnltvzuhnxnrzhxxzpzbtqdulqrhqfjlkwgtyzqonwxveehwrxbrjfijszzvxwxooetexntoprvhfkifoqkqilgkcbbuhirjmqkgkqhbqysouadvuodczczgfbkgpkpwixnxseeefnskbpcbmwkszlnvmwgemgyycthztibjrvgtarumxplvcwilbijxssybggrbigwpuvjiiadprsvsisdlwdtlxoyofnszyohilngtxogwiisewytobrotskefuykmlgpyyhjpkhigsewfuoptcnscblbldixxaoexlqgplrvqruyqfgcnqwzjxgrzfuxpmiejertazgxzcrejtirdtsonaqmtgeyindijhbkujsdlcikvvitwhqsrhfdwqrmkgpaybsgvoqsnssznhmqxpdcwzyrqjvklotwfoqqotxoefzdntzvdcjxcbrzxtkkaqehfodvandtdipjlnrbmxwyprhgmxuucftovdvwkihvswutawuvucepnvgxayswzqtykrdszpivmlxmylmjedrxzyubtuinvaltzfbcwjfiztbikefwbhajaatygotbbvtvvdbjbkritjbrnillvpgjxjlapkwwgieodalhtfftiqziaqamvpbymgyrknpeqoyzsvpiparhvmglejtkijgczysejnoyqqkzjwyooynxmtniyzuryyddjlqovdpwsertmqhdhffuontnqdmpvfuifkonlipowezacfchcpormwvgfzvhkvxczwoumkcnlstmbfyrbqgjwpzmhgeqljynszhyegzdgcpzzqouzbwqhxudkznrixssamcacjvzqlrfswrtaeotsqgxzgfvcyoanaymfpegqhtghrzwtgtsqrcqjqllazebuairlhupjbmqesizjwyzxnypopmcluweuuotnegrwiiqffkqwjpnvbuallzukgycjfhcyyqijtgfivpywlwmuazpdkiayjgktrstlpvemedqhmzicrtedvamnoemeejcceosivedbduruomdfcxfnxskriyjsznrwiyrlhbhspuepgpygpgijnumrakoizeddaoennnssuushtaprrwcmchyywgwyqzgxehipxdwrdfhtycjcvvufpaxebhjewgtfdzykozwhykbjusgeqoymbbgjvvznvhexlcwcglgtqnnrcyypcagngazzvpppxittkjerprwipjfswxzzygmxvvhcmekvtxtmgdcpfalcnncmfxqjpzsgtkvqpmxepsedgftdfhaeyqnigpmxqecwkxoavvxqttwpcecvftcwpzhtwkzguaecelrwttbhiripzlxewpwejxxrwfxqfpjytqojgyirlcrdewrpbqxctxuikgpzoxhgkvwdmadijmqmyegqlzodpzonhdhcacturzpcrlsssecpmfyxpuzrwtrvjlllykdrktegvilfjpnavxdrpsrwsmkcgsdvvhvkhczivgyptshnvisrwcltdhdfwufcjysbqrgrtqazsmoosasmgakkjozfknuwxqlzmkgjaizbrqakoibunekuyomzvfddwazozbflaqyphwmchicxmuyhmbekqcnqdcqnwbateyskxvkwcrybxisdyygqltguupwpeoqdrpvuioktuynkqppgkzujnogxqimzhzvpjspjrwmyeqreixuduipksqzvrsmnxnqvyecwtfsvdbpcybdecjdjuoxiroxnsnkgriwjbutqriowzvjywjzhcpqfbxokrmqhzdfcnejwdsevqantcflqlhlvydjjcfmpukwluskwnsqoxtxnhhuvofyhpwbzpamxgayshdzsjryzvxoxzpdeobqiyusbujadugxxowkhvpgwffeyvxqwahugitkjrhfhbimzvdlmrbygjshazxpzunfckenalaipidnronhypkfxzjtbmnwqqqbhpswpdalggwwrhgrmgwywsseevjjkaqkkehrplfzhshwhgpsiqfalbdohwdxfooxlqqfsovlmupvjyhcdxucgejxbubyasqaictoqjyabiunweipiekheiqobrwrmzezyswatdpxdcieyvguikxewoekhtkhqybynojncujmdaiulkfpwzqlnpvdtbrsvsbcddagtavjulxwpstlqtplqtustzjzoexrisclwldyoyamwwpjzyvmbrwdjyiubzysvxnnrhupflqxqvqjnqbonubjmfeccoijovxfzpouyukrccsrkvendggkdgonldstmedihwirvbkgonuojaboufkbqmolhgfewsdlfvpilgzljtrgfkqzmxdxysfmkvvtcjuyasqmzuopxbasgaabpagkmdfkyuzktpbcrttgtwtatcksttojwvnelgjjffaijnakabtaendzvmlkjtrsekigopnyrugksfluxkyojayopfacnywgwypzndwmsxhlmpusirgawkeivjbgkiyanaigjtixlpdxblwkapqauircaibydbrbfeqcynsduabybmbvgglqozuzajqkjervqnqmfvsqzzbrgotwxcgyqlnvjqacfjvtmnsrdflstniwzsvikwihyjflhpjewczhxyiedtdwvyxhwngeqgvlasoyltduzixkxgqkonxurpztgwktfwbrsxwowtrecqeyguiobttcvthrlascxdgccwldxpnseikrobujpuplbpoystfkjanjzyzjyjkndhtpgqdrptwubjjlnihfzjoztjljtiiparfkjnacruzxkevtwrzrxnpcfkpbibebonugichzhifawdckvqmwgajyhybjlvftmrcmagvhviudnphbmattgkrapuiwhzizpotbgbxkbzqcnfnytuuuwydldkvbhxvghvzrumzwzmcuplsaoyeyiilzcivupvwzytsfinyixqviokxpdszqsdxmrxwesyzbboxkihygkjlzqritosouwkhbaykqqyywcgproaspjyftkuyeyajgdmladuvtijqnwjqvnwcmdxrqrptibilmvmozpxdxmcqtknxkfytsvlvexmpsbrnyajmroyrclkjkskndypmtjgkycwneurltisbouakcaqcnijlgnduaqrftgnocdvsdahbtyybcaizbzkccdtmolfpzdbkmtdjldkkztmfehadmugxiyyrvexdcchkkokhjnikzayzjyafanmazquhwhcnnncszzrycwalbkszmvoogzynqmhybqcibofulxxwxpavmnxnlxixqtljmzimavcfcnfqfcemmtmssadrxwbptvxhrpjvyikypogvwgxpgqygvufapplbwcrmphcnxtnkwezhzkjgxykhcpdehixdxhctsxkxbbtlwsmmiuzplzyxdymhruxabzwvffsqwriujszwxythotbamldolarqsjeyndlvmaddiwsjwjcelwfnmpfpuamjhoxmhquleeuewonatdkslawenazzirrwxvytcbaqjuipzcittqkhsxppednfxnlcumjksxwndtpvnwcrlldvprqpmmtremknkiemplxdjnyuofxduqifefdedtxyuxgqvwlvzegmiyifmemyrkfnizkmrzbcgsmwgwbjzjaqvzzgnmpusgtlxpydzohpmepdpcrouwjhhcuyasipzuoabiiixpzmfskommqhheqlnyhxwiwmkeqotyiixsswvpqdjqncqndmlofewyqruvbqoqdrlzbnrvphsomrpyvhxhimggagaqfyaxomeqqlidzxagpuuewaxbuafycvomlyxjdbammxourcoyvgvldtyhgfqjdmqpnldmcdyjvcuelfmnsefhlfzimgbwhuleriejkoecjlkycdwwbjcclucqalskyzeimoamjnsbrlajnsjcuwwmejpldtpafeuehkztrysvezxjturogmtbcrviixjlthrpajesoaalhoztiararvljqztouotvmilpxtqntbfznmffawnpphzrdsoaetdjeikapgfamhjowtlwndntsrtpnirrxlsrdimnqqjvowowarmxhqqaqywqkesiwqotfrhlbofotzenjddglbdwaxffwipmzzbkpdclencmetifwsogjrpdhlginuldfxulexgljynrinbdctbvosdwqtflxhnizejkzpaojoofxpgijycnzbjypjkjnjdbywvfxafgxcnqhxmimmfsnlsfqlqiiwlzyfnbvkhgzmeoalqyoidmuzenelpfqzksfggmebewnxhfpmbcjguhgnmeetlbnstonpvkbtxkbtefmhkklsqhdrbuupqnnufdxzkiqeggykixxswabsftobycxpiothsagyddlbdqjpfzirnxurgonzowoitowvucqrzcxsyzyqicrvgfmfznakqmtxmgmsltgjlrglatxviwxvjzyhrstshljhcsoegzaiuvvmhvqskfrgvzeycgxnxatannwxalayyekdshyhqphprzcwaeiegvqbdfgyryonqkfnmfohdfbmdqxwbngwljpuxppqaljxcwzujzffyaqdiqlvzzalxfpeghftzmquqtzxyevbjrglucchmrnezjasicdnwgsnjlnubcizcyjxwxkvtbgovjsohtjfdfazyplhtusdiccnnoqcrifsakclhrbuokivielxxttjzblecdsgwfofvnnhixtuzoutgwkzjctvluzvvbhvzcrwqgmdpytalfiyvixewxetyqrptmeapkapwnpiopcyjvanumxwcdgxjroywvslcwcqchemzmhfnvkaopyeankzaouduyetiowhdfgjyjivxpenfgtxzbrdhayuyqykgqwcewsqnaiuezalcjgnpslguefwvsadctchatvfsjistemqllniihsoacjqwgpctziphsybaxhazdslpjvvpullcqouyalcehvapsplyfkzhyuniqxhfgvhxafovuuoiqfgovqsxelghpkvdfrgqhuwzxormatkivzbqvqcyviinycymmnnthdenwjqzzrkjmvvkoxhseeskapndecgbggsoglwzvtgkvornfpcfpvpjidrskaozwebgyqpekhdxemkvrogzxsweafkplnaapffhulcwilcfeqreciqekunqqiegbbbscpdlcvlcqfrnfhvqqwezssdezndidmmxsfcgdmgesmxxisaoiwzksxgamkzmycopiqmoxavesekctiwnpjbfrxbiqihgtvhlptgzsynjnymczfbemopcblmeozbjtmmlcvavkxthycigktuxixlxvrlholkuhijlmoqzblmhglvmcxpdkimluhwdbnqatxiqdanavutsnvoxthztpxanoptezjtwxxzgbhdvlkyvugjjawvdutzrtnbzzqboiwucpvrcfmkogbmdtbiomykkvrwjquhwohfurzytubnnfvnebxd", 38894, 73463, 3098, 3671, 'zhshwhgpsiqfalbdohwdxfooxlqqfsovlmupvjyhcdxucgejxbubyasqaictoqjyabiunweipiekheiqobrwrmzezyswatdpxdcieyvguikxewoekhtkhqybynojncujmdaiulkfpwzqlnpvdtbrsvsbcddagtavjulxwpstlqtplqtustzjzoexrisclwldyoyamwwpjzyvmbrwdjyiubzysvxnnrhupflqxqvqjnqbonubjmfeccoijovxfzpouyukrccsrkvendggkdgonldstmedihwirvbkgonuojaboufkbqmolhgfewsdlfvpilgzljtrgfkqzmxdxysfmkvvtcjuyasqmzuopxbasgaabpagkmdfkyuzktpbcrttgtwtatcksttojwvnelgjjffaijnakabtaendzvmlkjtrsekigopnyrugksfluxkyojayopfacnywgwypzndwmsxhlmpusirgawkeivjbgkiyanaigjtixlpdxblwkapqauircaibydbrbfeqcynsduabybmbvgglqozuzajqkjervqnqmfvsqzzbrgotwxcgyqlnvjqacfjvtmnsrdflstniwzsvikwihyjflhpjewczhxyiedtdwvyxhwngeqgvlasoyltduzixkxgqkonxurpztgwktfwbrsxwowtrecqeyguiobttcvthrlascxdgccwldxpnseikrobujpuplbpoystfkjanjzyzjyjkndhtpgqdrptwubjjlnihfzjoztjljtiiparfkjnacruzxkevtwrzrxnpcfkpbibebonugichzhifawdckvqmwgajyhybjlvftmrcmagvhviudnphbmattgkrapuiwhzizpotbgbxkbzqcnfnytuuuwydldkvbhxvghvzrumzwzmcuplsaoyeyiilzcivupvwzytsfinyixqviokxpdszqsdxmrxwesyzbboxkihygkjlzqritosouwkhbaykqqyywcgproaspjyftkuyeyajgdmladuvtijqnwjqvnwcmdxrqrptibilmvmozpxdxmcqtknxkfytsvlvexmpsbrnyajmroyrclkjkskndypmtjgkycwneurltisbouakcaqcnijlgnduaqrftgnocdvsdahbtyybcaizbzkccdtmolfpzdbkmtdjldkkztmfehadmugxiyyrvexdcchkkokhjnikzayzjyafanmazquhwhcnnncszzrycwalbkszmvoogzynqmhybqcibofulxxwxpavmnxnlxixqtljmzimavcfcnfqfcemmtmssadrxwbptvxhrpjvyikypogvwgxpgqygvufapplbwcrmphcnxtnkwezhzkjgxykhcpdehixdxhctsxkxbbtlwsmmiuzplzyxdymhruxabzwvffsqwriujszwxythotbamldolarqsjeyndlvmaddiwsjwjcelwfnmpfpuamjhoxmhquleeuewonatdkslawenazzirrwxvytcbaqjuipzcittqkhsxppednfxnlcumjksxwndtpvnwcrlldvprqpmmtremknkiemplxdjnyuofxduqifefdedtxyuxgqvwlvzegmiyifmemyrkfnizkmrzbcgsmwgwbjzjaqvzzgnmpusgtlxpydzohpmepdpcrouwjhhcuyasipzuoabiiixpzmfskommqhheqlnyhxwiwmkeqotyiixsswvpqdjqncqndmlofewyqruvbqoqdrlzbnrvphsomrpyvhxhimggagaqfyaxomeqqlidzxagpuuewaxbuafycvomlyxjdbammxourcoyvgvldtyhgfqjdmqpnldmcdyjvcuelfmnsefhlfzimgbwhuleriejkoecjlkycdwwbjcclucqalskyzeimoamjnsbrlajnsjcuwwmejpldtpafeuehkztrysvezxjturogmtbcrviixjlthrpajesoaalhoztiararvljqztouotvmilpxtqntbfznmffawnpphzrdsoaetdjeikapgfamhjowtlwndntsrtpnirrxlsrdimnqqjvowowarmxhqqaqywqkesiwqotfrhlbofotzenjddglbdwaxffwipmzzbkpdclencmetifwsogjrpdhlginuldfxulexgljynrinbdctbvosdwqtflxhnizejkzpaojoofxpgijycnzbjypjkjnjdbywvfxafgxcnqhxmimmfsnlsfqlqiiwlzyfnbvkhgzmeoalqyoidmuzenelpfqzksfggmebewnxhfpmbcjguhgnmeetlbnstonpvkbtxkbtefmhkklsqhdrbuupqnnufdxzkiqeggykixxswabsftobycxpiothsagyddlbdqjpfzirnxurgonzowoitowvucqrzcxsyzyqicrvgfmfznakqmtxmgmsltgjlrglatxviwxvjzyhrstshljhcsoegzaiuvvmhvqskfrgvzeycgxnxatannwxalayyekdshyhqphprzcwaeiegvqbdfgyryonqkfnmfohdfbmdqxwbngwljpuxppqaljxcwzujzffyaqdiqlvzzalxfpeghftzmquqtzxyevbjrglucchmrnezjasicdnwgsnjlnubcizcyjxwxkvtbgovjsohtjfdfazyplhtusdiccnnoqcrifsakclhrbuokivielxxttjzblecdsgwfofvnnhixtuzoutgwkzjctvluzvvbhvzcrwqgmdpytalfiyvixewxetyqrptmeapkapwnpiopcyjvanumxwcdgxjroywvslcwcqchemzmhfnvkaopyeankzaouduyetiowhdfgjyjivxpenfgtxzbrdhayuyqykgqwcewsqnaiuezalcjgnpslguefwvsadctchatvfsjistemqllniihsoacjqwgpctziphsybaxhazdslpjvvpullcqouyalcehvapsplyfkzhyuniqxhfgvhxafovuuoiqfgovqsxelghpkvdfrgqhuwzxormatkivzbqvqcyviinycymmnnthdenwjqzzrkjmvvkoxhseeskapndecgbg'),
#     ("puomfovzgiymqhxprfxqjzjzzzlggsrpgbrwrwlslbdpjzudtczaovcytefpqmkesqwgxluxog", 13, 8, 69, 7, "fovzgiymqhxprfxqjzjzzzlggsrpgbrwrwlslbdpjzudtczaovcytefpqmkesqwgxluxo"),
# ]

# for i, (s, power, modulo, k, hashValue, ans) in enumerate(tests):
#     res = sol.subStrHash(s, power, modulo, k, hashValue)
#     if sorted(res) == sorted(ans):
#         print(f'Test {i}: PASS')
#     else:
#         print(f'Test {i}; Fail. Ans: {ans}, Res: {res}')
